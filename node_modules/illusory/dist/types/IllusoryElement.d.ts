import { IIllusoryElementOptions, IIllusoryOptions } from './options';
export declare class IllusoryElement {
    private initialStyleAttributeValue?;
    private originalStyle;
    private deltaHandlers;
    _makeCompositeOnly(): void;
    natural: HTMLElement | SVGElement;
    clone: HTMLElement | SVGElement;
    rect: DOMRect;
    isAttached: boolean;
    _shouldIgnoreTransparency: IIllusoryElementOptions['ignoreTransparency'];
    get _ignoreTransparency(): boolean;
    _hasTransparentBackground(): boolean;
    _to(element: IllusoryElement): void;
    _enableTransitions(options: IIllusoryOptions): void;
    _disableTransitions(): void;
    _setParent(element: HTMLElement | SVGElement): void;
    private _resetNaturalStyleAttribute;
    constructor(el: HTMLElement | SVGElement, options?: Partial<IIllusoryElementOptions>);
    getStyle(property: string): string;
    setStyle(property: string, value: string | number): void;
    waitFor(property: string): Promise<void>;
    hide(): void;
    show(): void;
    hideNatural(): void;
    showNatural(): void;
    flushCSS(): void;
    attach(): void;
    detach(): void;
}
